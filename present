Hi everyone, welcome to see my project. This, is a automatic report system for project progress. It is totally automatic, and you do not need to do anything.The report mail will send to your mailbox every time the progress change.

Before we came into, let us see how to do this job in traditional way. For years, we have been used to use the traditional way to represent the project status. Here is two major report system: a excel management system and the JIRA system. But all of them have same shortages: They are not clear enough. You can not see the percentage of the progress, and the information is too much for a user. No one want to click the screen for dozen of time, just because he want to find the information he want. So what does a good report system should be like? It should tell you the general status, but also tell you the detail. It should have enough information but also be as clean as possible. So I'm now proud to introduce you a totally new idea, the M-Report system. 

It redesign the representation and bring a totally new feeling of fresh to our users. Here, you can see the it. On the left side , shows the general status of our project. On the right side, we can see the details. So both the general status and details are shown on the report to make sure that every users get what they need. On the general part, we can easily get the project status including their percentage and their change. The beautiful heat map and these borders give strong visual assist to make sure every user can read our report easily, even for a three old child. In the right section- the detail section, we can clearly and easily capture the detail of projects. they are categorized both by region and by  their group so that you can find any currency you want in a second. Pretty cool, fast and easy. So, that is the totally new design of the report system.

And now let’s look back to our traditional way, and you can see how far M-Report have been. But actually, I have not told you the biggest advantage of M-Report System. It’s totally automatic. Totally. No need to configure, no need to click, no action needed at all. You can seat in your chair, drink a coffee, and the report will be sent to your email box all by itself. From data collection to mailing, all the work are done by program.

So, an automatic report system with a totally new design interface. That is M-Report System.

In the next part, I want to share some ideas both in interface design and the architecture design.

In the bottom of the report, you can see some strange letters shown beside the currencies. That, actually, is the currencies’ ranking. It can give great help for managers to decide with currencies should finish first. And the details like this can be seen everywhere in the report, the heat map and border, which gives great visual assist, the table’s size, which carefully design to be perfectly suit for our screen, M-Report even carefully choose the color of those word so that color blindness people can clearly see them. This is pretty cool. So all those details are carefully designed because client first, and this system want to give you great comfort while you are using it  and that’s the basic principle of all system I designed.

Now let’s take a look at the architecture design. As you can see here, this is a pretty simple architecture design, because I’m trying hard to keep the maintains as simple as possible. The system are generally divided into two parts. The date collector and the report producer. Both are the key component to convert date into report. And the most important pattern, is that it is really like a map-reduce. The data can be collected asynchronous and insert into the report, which is produced by template in report producer component. By using multi-thread, we can promote the efficiency at least three times than normal. 

Also , there are some interesting designs I want to talk about. But firstly, I want to tell you the truth that they are abandoned. The reason why I still talk about it, is that they are all key component in other system. User control, log control, emergency dealer, plug in design, flexible report layout, and etc. They are all important component in any system we see in Morgan, but they are all abandoned. Why? Because this should be a simple system, easy to maintain, even a Java beginner can still understand the code and can maintain it. So that’s why I abandoned them. The system may need them when new features added in. But now, I still need to hide those components that I actually have realized.

So that’s all about the architecture.
 
Now, the system is running stably in the host. And the whole team is getting benefit from this report. People love this report. And this report, actually has found out some inconsistence issue in our production system, and stopped this inconsistence issue become bigger and influence the real business. 

So that’s it, an automatic report system for project progress. Thank you all for listening.s
